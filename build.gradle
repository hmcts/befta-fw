plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'maven'
}

apply plugin: 'java'

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "5.23.0"

group 'uk.gov.hmcts'

version buildNumber

def gitRepo = "https://github.com/hmcts/befta-fw"

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/befta-fw"
    }
}

// tag::repositories[]
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/hmcts/hmcts-maven'
    }
}
// end::repositories[]

ext {
    junitJupiterVersion = '5.2.0'
    junitVintageVersion = '5.2.0'
}

jar {
    baseName = "befta-fw"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
  testLogging.showStandardStreams = true
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId 'befta-fw'
            version project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Backend Functional Test Automation Framework')
                root.appendNode('name', 'BEFTA FW')
                root.appendNode('url', gitRepo)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = 'befta-fw'
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = gitRepo
        version {
            name = project.version
        }
    }
}

wrapper.gradleVersion = '2.10'

dependencies {
    compile "com.fasterxml.jackson.core:jackson-databind:2.10.0"

    compile group: 'io.rest-assured', name: 'rest-assured', version: '3.1.0'

    compile group: 'io.cucumber', name: 'cucumber-java', version: '5.7.0'
    compile group: 'io.cucumber', name: 'cucumber-junit', version: '5.7.0'

    compile 'org.projectlombok:lombok:1.18.4'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '2.0.0'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.12'
    
    compile group: 'com.google.guava', name: 'guava', version: '28.1-jre'

    compile group: 'org.apache.poi', name: 'poi', version: '4.0.0'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.0'

    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.+'

    testCompile 'io.github.openfeign:feign-jackson:9.7.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.4.0'
    testCompile group: 'org.junit-pioneer', name: 'junit-pioneer', version: '0.9.0'
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testRuntime "org.junit.platform:junit-platform-commons:1.5.2"
    testRuntime "org.junit.platform:junit-platform-engine:1.6.2"
}
// end::dependencies[]

